{"version":3,"file":"ngx-chips.js","sources":["ng:/ngx-chips/out/core/pipes/highlight.pipe.ts","ng:/ngx-chips/out/core/constants/index.ts","ng:/ngx-chips/out/core/providers/drag-provider.ts","ng:/ngx-chips/out/defaults.ts","ng:/ngx-chips/out/core/providers/options-provider.ts","ng:/ngx-chips/out/core/accessor.ts","ng:/ngx-chips/out/core/helpers/listen.ts","ng:/ngx-chips/out/components/tag-input-form/tag-input-form.component.ts","ng:/ngx-chips/out/components/dropdown/tag-input-dropdown.component.ts","ng:/ngx-chips/out/components/tag/tag-ripple.component.ts","ng:/ngx-chips/out/components/tag/tag.component.ts","ng:/ngx-chips/out/components/tag-input/animations.ts","ng:/ngx-chips/out/components/tag-input/tag-input.ts","ng:/ngx-chips/out/components/icon/icon.ts","ng:/ngx-chips/out/tag-input.module.ts"],"names":["state","defaults","tslib_1.__awaiter","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean,\n    dropping: boolean,\n    index: number | undefined\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n\n        try {\n            return JSON.parse(data) as DraggedTag;\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: {[K in StateProperty]?: State[K]}): void {\n        this.state = {...this.state, ...state};\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: string;\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n}\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {AsyncValidatorFn, FormControl, FormGroup, ValidatorFn} from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styles: [`.dark tag:focus{-webkit-box-shadow:0 0 0 1px #323232;box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;-webkit-box-shadow:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;-webkit-box-shadow:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{-webkit-box-shadow:inset 0 1px 1px #d9534f;box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;-webkit-transition:all .25s;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.minimal.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.dark.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap3-info.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:4px;cursor:text;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,\"Helvetica Neue\",sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}`],\n    template: `<!-- form -->\n<form (ngSubmit)=\"submit($event)\" [formGroup]=\"form\">\n    <input #input\n\n           type=\"text\"\n           class=\"ng2-tag-input__text-input\"\n           autocomplete=\"off\"\n           tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\n           minlength=\"1\"\n           formControlName=\"item\"\n\n           [ngClass]=\"inputClass\"\n           [attr.id]=\"inputId\"\n           [attr.placeholder]=\"placeholder\"\n           [attr.aria-label]=\"placeholder\"\n           [attr.tabindex]=\"tabindex\"\n           [attr.disabled]=\"disabled ? disabled : null\"\n\n           (focus)=\"onFocus.emit($event)\"\n           (blur)=\"onBlur.emit($event)\"\n           (keydown)=\"onKeyDown($event)\"\n           (keyup)=\"onKeyUp($event)\"\n    />\n</form>\n`\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input') public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({value: '', disabled: this.disabled});\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const {dirty, value, valid} = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n\n            this.inputText = '';\n        }\n        return this.onKeydown.emit($event);\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        if (this.form.valid) {\n            this.onSubmit.emit($event);\n        }\n    }\n}\n","import {\n    Component,\n    ContentChildren,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    Injector,\n    Input,\n    QueryList,\n    TemplateRef,\n    Type,\n    ViewChild,\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { map, filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { OptionsProvider } from '../../core/providers/options-provider';\nimport { TagInputComponent } from '../tag-input/tag-input';\nimport { TagInputDropdownOptions } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\n\nconst defaults: Type<TagInputDropdownOptions> = forwardRef(() => OptionsProvider.defaults.dropdown);\n\n@Component({\n    selector: 'tag-input-dropdown',\n    template: `<ng2-dropdown [dynamicUpdate]=\"dynamicUpdate\">\n    <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\n                       [zIndex]=\"zIndex\"\n                       [appendToBody]=\"appendToBody\"\n                       [offset]=\"offset\">\n        <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\n                       [value]=\"item\"\n                       [ngSwitch]=\"!!templates.length\">\n\n            <span *ngSwitchCase=\"false\"\n                  [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\n            </span>\n\n            <ng-template *ngSwitchDefault\n                      [ngTemplateOutlet]=\"templates.first\"\n                      [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\n            </ng-template>\n        </ng2-menu-item>\n    </ng2-dropdown-menu>\n</ng2-dropdown>\n`\n})\nexport class TagInputDropdown {\n    /**\n     * @name dropdown\n     */\n    @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\n\n    /**\n     * @name menuTemplate\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name offset\n     */\n    @Input() public offset: string = new defaults().offset;\n\n    /**\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = new defaults().focusFirstElement;\n\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     */\n    @Input() public showDropdownIfEmpty = new defaults().showDropdownIfEmpty;\n\n    /**\n     * @description observable passed as input which populates the autocomplete items\n     * @name autocompleteObservable\n     */\n    @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n    @Input() public minimumTextLength = new defaults().minimumTextLength;\n\n    /**\n     * - number of items to display in the autocomplete dropdown\n     * @name limitItemsTo\n     */\n    @Input() public limitItemsTo: number = new defaults().limitItemsTo;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy = new defaults().displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy = new defaults().identifyBy;\n\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n    @Input() public matchingFn: (value: string, target: TagModel) => boolean = new defaults().matchingFn;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = new defaults().appendToBody;\n\n    /**\n     * @name keepOpen\n     * @description option to leave dropdown open when adding a new item\n     */\n    @Input() public keepOpen = new defaults().keepOpen;\n\n    /**\n     * @name dynamicUpdate\n     */\n    @Input() public dynamicUpdate = new defaults().dynamicUpdate;\n\n    /**\n    * @name zIndex\n     */\n    @Input() public zIndex = new defaults().zIndex;\n\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     */\n    public items: TagModel[] = [];\n\n    /**\n     * @name tagInput\n     */\n    public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n    /**\n     * @name _autocompleteItems\n     */\n    private _autocompleteItems: TagModel[] = [];\n\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    public set autocompleteItems(items: TagModel[]) {\n        this._autocompleteItems = items;\n    }\n\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    @Input() public get autocompleteItems(): TagModel[] {\n        const items = this._autocompleteItems;\n\n        if (!items) {\n            return [];\n        }\n\n        return items.map((item: TagModel) => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n    }\n\n    constructor(private readonly injector: Injector) {}\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n            this.requestAdding(item);\n        });\n\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n\n        const DEBOUNCE_TIME = 200;\n        const KEEP_OPEN = this.keepOpen;\n\n        this.tagInput\n            .onTextChange\n            .asObservable()\n            .pipe(\n                debounceTime(DEBOUNCE_TIME),\n                filter((value: string) => {\n                    if (KEEP_OPEN === false) {\n                        return value.length > 0;\n                    }\n\n                    return true;\n                })\n            )\n            .subscribe(this.show);\n    }\n\n    /**\n     * @name updatePosition\n     */\n    public updatePosition(): void {\n        const position = this.tagInput.inputForm.getElementPosition();\n\n        this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n    }\n\n    /**\n     * @name isVisible\n     */\n    public get isVisible(): boolean {\n        return this.dropdown.menu.state.menuState.isVisible;\n    }\n\n    /**\n     * @name onHide\n     */\n    public onHide(): EventEmitter<Ng2Dropdown> {\n        return this.dropdown.onHide;\n    }\n\n    /**\n     * @name onItemClicked\n     */\n    public onItemClicked(): EventEmitter<string> {\n        return this.dropdown.onItemClicked;\n    }\n\n    /**\n     * @name selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this.dropdown.menu.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name state\n     */\n    public get state(): any {\n        return this.dropdown.menu.state;\n    }\n\n    /**\n     *\n     * @name show\n     */\n    public show = (): void => {\n        const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n        const value = this.getFormValue();\n        const hasMinimumText = value.trim().length >= this.minimumTextLength;\n        const position = this.calculatePosition();\n        const items = this.getMatchingItems(value);\n        const hasItems = items.length > 0;\n        const isHidden = this.isVisible === false;\n        const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n        const isDisabled = this.tagInput.disable;\n\n        const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n        const shouldHide = this.isVisible && !hasItems;\n\n        if (this.autocompleteObservable && hasMinimumText) {\n            return this.getItemsFromObservable(value);\n        }\n\n        if ((!this.showDropdownIfEmpty && !value) || maxItemsReached || isDisabled) {\n            return this.dropdown.hide();\n        }\n\n        this.setItems(items);\n\n        if (shouldShow) {\n            this.dropdown.show(position);\n        } else if (shouldHide) {\n            this.hide();\n        }\n    }\n\n    /**\n     * @name hide\n     */\n    public hide(): void {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener(): void {\n        if (!this.isVisible || !this.dynamicUpdate) {\n            return;\n        }\n\n        this.updatePosition();\n    }\n\n    /**\n     * @name onWindowBlur\n     */\n    @HostListener('window:blur')\n    public onWindowBlur(): void {\n        this.dropdown.hide();\n    }\n\n    /**\n     * @name getFormValue\n     */\n    private getFormValue(): string {\n        const formValue = this.tagInput.formValue;\n        return formValue ? formValue.toString().trim() : '';\n    }\n\n    /**\n     * @name calculatePosition\n     */\n    private calculatePosition(): ClientRect {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n    private requestAdding = async (item: Ng2MenuItem) => {\n        const tag = this.createTagModel(item);\n        await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n    }\n\n    /**\n     * @name createTagModel\n     * @param item\n     */\n    private createTagModel(item: Ng2MenuItem): TagModel {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n\n    /**\n     *\n     * @param value {string}\n     */\n    private getMatchingItems(value: string): TagModel[] {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n\n        const dupesAllowed = this.tagInput.allowDupes;\n\n        return this.autocompleteItems.filter((item: TagModel) => {\n            const hasValue = dupesAllowed ? false : this.tagInput.tags.some(tag => {\n                const identifyBy = this.tagInput.identifyBy;\n                const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n                return model === item[this.identifyBy];\n            });\n\n            return this.matchingFn(value, item) && (hasValue === false);\n        });\n    }\n\n    /**\n     * @name setItems\n     */\n    private setItems(items: TagModel[]): void {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n\n    /**\n     * @name resetItems\n     */\n    private resetItems = (): void => {\n        this.items = [];\n    }\n\n    /**\n     * @name populateItems\n     * @param data\n     */\n    private populateItems(data: any): TagInputDropdown {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string' ? {\n                [this.displayBy]: item,\n                [this.identifyBy]: item\n            } : item;\n        });\n\n        return this;\n    }\n\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n    private getItemsFromObservable = (text: string): void => {\n        this.setLoadingState(true);\n\n        const subscribeFn = (data: any[]) => {\n            // hide loading animation\n            this.setLoadingState(false)\n                // add items\n                .populateItems(data);\n\n            this.setItems(this.getMatchingItems(text));\n\n            if (this.items.length) {\n                this.dropdown.show(this.calculatePosition());\n            } else {\n                this.dropdown.hide();\n            }\n        };\n\n        this.autocompleteObservable(text)\n            .pipe(first())\n            .subscribe(subscribeFn, () => this.setLoadingState(false));\n    }\n\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n    private setLoadingState(state: boolean): TagInputDropdown {\n        this.tagInput.isLoading = state;\n\n        return this;\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n        \n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state: string = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: \"tag\",\n    template: `<div (click)=\"select($event)\"\n     (dblclick)=\"toggleEditMode()\"\n     (mousedown)=\"rippleState='clicked'\"\n     (mouseup)=\"rippleState='none'\"\n     [ngSwitch]=\"!!template\"\n     [class.disabled]=\"disabled\"\n     [attr.tabindex]=\"-1\"\n     [attr.aria-label]=\"getDisplayValue(model)\">\n\n    <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\n        <!-- CUSTOM TEMPLATE -->\n        <ng-template\n            [ngTemplateOutletContext]=\"{ item: model, index: index }\"\n            [ngTemplateOutlet]=\"template\">\n        </ng-template>\n    </div>\n\n    <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\n        <!-- TAG NAME -->\n        <div [attr.contenteditable]=\"editing\"\n             [attr.title]=\"getDisplayValue(model)\"\n             class=\"tag__text inline\"\n             spellcheck=\"false\"\n             (keydown.enter)=\"disableEditMode($event)\"\n             (keydown.escape)=\"disableEditMode($event)\"\n             (click)=\"editing ? $event.stopPropagation() : undefined\"\n             (blur)=\"onBlurred($event)\">\n            {{ getDisplayValue(model) }}\n        </div>\n\n        <!-- 'X' BUTTON -->\n        <delete-icon\n            aria-label=\"Remove tag\"\n            role=\"button\"\n            (click)=\"remove($event)\"\n            *ngIf=\"isDeleteIconVisible()\">\n        </delete-icon>\n    </div>\n</div>\n\n<tag-ripple [state]=\"rippleState\"\n            [attr.tabindex]=\"-1\"\n            *ngIf=\"isRippleVisible\">\n</tag-ripple>\n`,\n    styles: [`:host,:host>div,:host>div:focus{outline:0;overflow:hidden;-webkit-transition:opacity 1s;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:.3s ease-in-out forwards blink;animation:.3s ease-in-out forwards blink}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}`]\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== \"string\" && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding(\"class.moving\")\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = \"none\";\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple)\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener(\"keydown\", [\"$event\"])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event)\n            }\n        }\n\n        this.onKeyDown.emit({ event, model: this.model });\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add(\"blink\");\n\n        setTimeout(() => classList.remove(\"blink\"), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === \"string\"\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === \"string\" ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove(\"tag--editing\");\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : \"\";\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate(\"{{ enter }}\", keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate(\"{{ leave }}\", keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit,\n    Type\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first} from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\nimport { OptionsProvider } from '../../core/providers/options-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { TagInputOptions } from '../../defaults';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n\nconst defaults: Type<TagInputOptions> = forwardRef(() => OptionsProvider.defaults.tagInput);\n\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styles: [`.dark tag:focus{-webkit-box-shadow:0 0 0 1px #323232;box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;-webkit-box-shadow:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;-webkit-box-shadow:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{-webkit-box-shadow:inset 0 1px 1px #d9534f;box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;-webkit-transition:all .25s;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.minimal.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.dark.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap3-info.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:4px;cursor:text;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:'';-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress;animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;font-family:Roboto,\"Helvetica Neue\",sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;-webkit-transition:all .3s;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196f3;color:#fff;-webkit-box-shadow:0 2px 3px 1px #d4d1d1;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;-webkit-box-shadow:0 2px 3px 1px #d4d1d1;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:initial;-webkit-box-shadow:0 2px 3px 1px #d4d1d1;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):active,.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):active,.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active,.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}`],\n    template: `<!-- CONTAINER -->\n\n<div ngClass=\"ng2-tag-input {{ theme || '' }}\"\n     (click)=\"focus(true, false)\"\n     [attr.tabindex]=\"-1\"\n\n     (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\n     (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n     (dragover)=\"dragZone ? onDragOver($event) : undefined\"\n     (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n     [class.ng2-tag-input--dropping]=\"isDropping()\"\n     [class.ng2-tag-input--disabled]=\"disable\"\n     [class.ng2-tag-input--loading]=\"isLoading\"\n     [class.ng2-tag-input--invalid]=\"hasErrors()\"\n     [class.ng2-tag-input--focused]=\"isInputFocused()\">\n\n    <!-- TAGS -->\n    <div class=\"ng2-tags-container\">\n        <tag *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\n\n             (onSelect)=\"selectItem(item)\"\n             (onRemove)=\"onRemoveRequested(item, i)\"\n             (onKeyDown)=\"handleKeydown($event)\"\n             (onTagEdited)=\"updateEditedTag($event)\"\n             (onBlur)=\"onTagBlurred($event, i)\"\n             draggable=\"{{ editable }}\"\n\n             (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\n             (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\n             (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\n             (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\n             (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\n\n             [canAddTag]=\"isTagValid\"\n             [attr.tabindex]=\"0\"\n             [disabled]=\"disable\"\n             [@animation]=\"animationMetadata\"\n             [hasRipple]=\"ripple\"\n             [index]=\"i\"\n             [removable]=\"removable\"\n             [editable]=\"editable\"\n             [displayBy]=\"displayBy\"\n             [identifyBy]=\"identifyBy\"\n             [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\n             [draggable]=\"dragZone\"\n             [model]=\"item\">\n        </tag>\n\n        <tag-input-form\n            (onSubmit)=\"onFormSubmit()\"\n            (onBlur)=\"blur()\"\n            (click)=\"dropdown ? dropdown.show() : undefined\"\n            (onKeydown)=\"fireEvents('keydown', $event)\"\n            (onKeyup)=\"fireEvents('keyup', $event)\"\n\n            [(inputText)]=\"inputText\"\n            [disabled]=\"disable\"\n            [validators]=\"validators\"\n            [asyncValidators]=\"asyncValidators\"\n            [hidden]=\"maxItemsReached\"\n            [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\n            [inputClass]=\"inputClass\"\n            [inputId]=\"inputId\"\n            [tabindex]=\"tabindex\">\n        </tag-input-form>\n    </div>\n\n    <div class=\"progress-bar\" *ngIf=\"isProgressBarVisible$ | async\"></div>\n</div>\n\n<!-- ERRORS -->\n<div *ngIf=\"hasErrors()\" class=\"error-messages {{ theme || '' }}\">\n    <p *ngFor=\"let error of errors\" class=\"error-message\">\n        <span>{{ error }}</span>\n    </p>\n</div>\n\n<ng-content></ng-content>\n`,\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = new defaults().separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = new defaults().separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = new defaults().placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = new defaults().secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = new defaults().maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = new defaults().validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = new defaults().asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = new defaults().onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = new defaults().errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = new defaults().theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = new defaults().onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = new defaults().inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = new defaults().inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = new defaults().clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = new defaults().hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = new defaults().addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = new defaults().addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = new defaults().pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = new defaults().blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = new defaults().removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = new defaults().editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = new defaults().allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = new defaults().modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = new defaults().trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = new defaults().ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = new defaults().tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = new defaults().disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = new defaults().dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = new defaults().onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = new defaults().onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = new defaults().animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\n\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n                public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel, index?: number): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({dragging: true, index});\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({dropping: true});\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({tag, index}: {tag: TagModel, index: number}): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    private removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete\n     * @param item\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number): Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                // focus input\n                this.focus(true, false);\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            resolve();\n                        } else {\n                            onValidationError();\n                        }\n                });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => {});\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            this.fireEvents('keydown', event);\n\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: {item: string}) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n\n            return clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n       })\n       .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: {...this.animationDuration}\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    template: `<span>\n    <svg height=\"16px\" viewBox=\"0 0 32 32\" width=\"16px\">\n        <path d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\n              fill=\"#121313\" />\n    </svg>\n</span>\n`,\n    styles: [`.dark tag:focus{-webkit-box-shadow:0 0 0 1px #323232;box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;-webkit-box-shadow:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;-webkit-box-shadow:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.4);box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{-webkit-box-shadow:inset 0 1px 1px #d9534f;box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;-webkit-transition:all .25s;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.minimal.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.dark.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.bootstrap3-info.ng2-tag-input{display:block;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;padding:4px;cursor:text;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{-ms-flex-wrap:wrap;flex-wrap:wrap;display:-webkit-box;display:-ms-flexbox;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;-webkit-transition:all .15s;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{-webkit-transform:scale(1.5) translateY(-3px);transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:active) path,:host-context(tag:focus) path{fill:#fff}:host-context(.darktag:active) path,:host-context(.darktag:focus) path{fill:#000}:host-context(.minimaltag:active) path,:host-context(.minimaltag:focus) path{fill:#000}:host-context(.bootstraptag:active) path,:host-context(.bootstraptag:focus) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}`]\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n"]}